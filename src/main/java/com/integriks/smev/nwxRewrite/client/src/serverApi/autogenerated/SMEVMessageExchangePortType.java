
package com.integriks.smev.nwxRewrite.client.src.serverApi.autogenerated;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import com.integriks.smev.nwxRewrite.client.src.serverApi.autogenerated.types.AckRequest;
import com.integriks.smev.nwxRewrite.client.src.serverApi.autogenerated.types.GetIncomingQueueStatisticsRequest;
import com.integriks.smev.nwxRewrite.client.src.serverApi.autogenerated.types.GetIncomingQueueStatisticsResponse;
import com.integriks.smev.nwxRewrite.client.src.serverApi.autogenerated.types.GetRequestRequest;
import com.integriks.smev.nwxRewrite.client.src.serverApi.autogenerated.types.GetRequestResponse;
import com.integriks.smev.nwxRewrite.client.src.serverApi.autogenerated.types.GetResponseRequest;
import com.integriks.smev.nwxRewrite.client.src.serverApi.autogenerated.types.GetResponseResponse;
import com.integriks.smev.nwxRewrite.client.src.serverApi.autogenerated.types.GetStatusRequest;
import com.integriks.smev.nwxRewrite.client.src.serverApi.autogenerated.types.GetStatusResponse;
import com.integriks.smev.nwxRewrite.client.src.serverApi.autogenerated.types.SendRequestRequest;
import com.integriks.smev.nwxRewrite.client.src.serverApi.autogenerated.types.SendRequestResponse;
import com.integriks.smev.nwxRewrite.client.src.serverApi.autogenerated.types.SendResponseRequest;
import com.integriks.smev.nwxRewrite.client.src.serverApi.autogenerated.types.SendResponseResponse;
import com.integriks.smev.nwxRewrite.client.src.serverApi.autogenerated.types.basic.Void;


/**
 * 
 *             Точка доступа, позволяющая принимать запросы любых типов,
 *             а также заявки на предоставление госуслуг.
 *             Кроме того, через этот сервис производится отмена запросов.
 *             Поскольку СМЭВ поколения 2 работает в режиме принудительной передачи ответов,
 *             функциональность "узнать статус запроса и получить ответ, если он готов" отсутствует.
 *         
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6b21 
 * Generated source version: 2.0
 * 
 */
@WebService(name = "SMEVMessageExchangePortType", targetNamespace = "urn://x-artefacts-smev-gov-ru/services/message-exchange/1.1")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
public interface SMEVMessageExchangePortType {


    /**
     * 
     *                 Послать запрос.
     *                 Факт прихода запроса говорит о том, что СМЭВ удостоверился в том, что отправитель
     *                 имеет право на получение данных по этому типу запросов.
     *                 Дополнительный контроль доступа в ИС-поставщике данных запрещён.
     *                 Тип запроса идентифицируется полным именем (qualified name) элемента //SendRequestRequest/PrimaryContent/element().
     *             
     * 
     * @param parameters
     * @return
     *     returns com.integriks.smev.nwxRewrite.client.src.serverApi.autogenerated.types.SendRequestResponse
     * @throws InvalidMessageIdFormatException
     * @throws MessageIsAlreadySentException
     * @throws TransactionCodeInvalidException
     * @throws StaleMessageIdException
     * @throws AttachmentSizeLimitExceededException
     * @throws SMEVFailureException
     * @throws AccessDeniedException
     * @throws InvalidContentException
     * @throws EndOfLifeException
     * @throws SignatureVerificationFaultException
     * @throws BusinessDataTypeIsNotSupportedException
     * @throws DestinationOverflowException
     * @throws SenderIsNotRegisteredException
     * @throws QuoteLimitExceededException
     * @throws AttachmentContentMiscoordinationException
     * @throws RecipientIsNotFoundException
     */
    @WebMethod(operationName = "SendRequest", action = "urn:SendRequest")
    @WebResult(name = "SendRequestResponse", targetNamespace = "urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.1", partName = "parameters")
    public SendRequestResponse sendRequest(
        @WebParam(name = "SendRequestRequest", targetNamespace = "urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.1", partName = "parameters")
        SendRequestRequest parameters)
        throws AccessDeniedException, AttachmentContentMiscoordinationException, AttachmentSizeLimitExceededException, BusinessDataTypeIsNotSupportedException, DestinationOverflowException, EndOfLifeException, InvalidContentException, InvalidMessageIdFormatException, MessageIsAlreadySentException, QuoteLimitExceededException, RecipientIsNotFoundException, SMEVFailureException, SenderIsNotRegisteredException, SignatureVerificationFaultException, StaleMessageIdException, TransactionCodeInvalidException
    ;

    /**
     * 
     *                 Дай сообщение из моей входящей очереди, если она не пуста.
     *             
     * 
     * @param parameters
     * @return
     *     returns com.integriks.smev.nwxRewrite.client.src.serverApi.autogenerated.types.SendResponseResponse
     * @throws InvalidMessageIdFormatException
     * @throws IncorrectResponseContentTypeException
     * @throws MessageIsAlreadySentException
     * @throws StaleMessageIdException
     * @throws SMEVFailureException
     * @throws AttachmentSizeLimitExceededException
     * @throws SignatureVerificationFaultException
     * @throws InvalidContentException
     * @throws BusinessDataTypeIsNotSupportedException
     * @throws DestinationOverflowException
     * @throws SenderIsNotRegisteredException
     * @throws QuoteLimitExceededException
     * @throws AttachmentContentMiscoordinationException
     * @throws RecipientIsNotFoundException
     */
    @WebMethod(operationName = "SendResponse", action = "urn:SendResponse")
    @WebResult(name = "SendResponseResponse", targetNamespace = "urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.1", partName = "parameters")
    public SendResponseResponse sendResponse(
        @WebParam(name = "SendResponseRequest", targetNamespace = "urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.1", partName = "parameters")
        SendResponseRequest parameters)
        throws AttachmentContentMiscoordinationException, AttachmentSizeLimitExceededException, BusinessDataTypeIsNotSupportedException, DestinationOverflowException, IncorrectResponseContentTypeException, InvalidContentException, InvalidMessageIdFormatException, MessageIsAlreadySentException, QuoteLimitExceededException, RecipientIsNotFoundException, SMEVFailureException, SenderIsNotRegisteredException, SignatureVerificationFaultException, StaleMessageIdException
    ;

    /**
     * Дай сообщение из моей входящей очереди _запросов_, если она не пуста.
     * 
     * @param parameters
     * @return
     *     returns com.integriks.smev.nwxRewrite.client.src.serverApi.autogenerated.types.GetRequestResponse
     * @throws UnknownMessageTypeException
     * @throws SignatureVerificationFaultException
     * @throws InvalidContentException
     * @throws SMEVFailureException
     * @throws SenderIsNotRegisteredException
     */
    @WebMethod(operationName = "GetRequest", action = "urn:GetRequest")
    @WebResult(name = "GetRequestResponse", targetNamespace = "urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.1", partName = "parameters")
    public GetRequestResponse getRequest(
        @WebParam(name = "GetRequestRequest", targetNamespace = "urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.1", partName = "parameters")
        GetRequestRequest parameters)
        throws InvalidContentException, SMEVFailureException, SenderIsNotRegisteredException, SignatureVerificationFaultException, UnknownMessageTypeException
    ;

    /**
     * Дай сообщение из моей входящей очереди _запросов_, если она не пуста.
     * 
     * @param parameters
     * @return
     *     returns com.integriks.smev.nwxRewrite.client.src.serverApi.autogenerated.types.GetStatusResponse
     * @throws UnknownMessageTypeException
     * @throws SignatureVerificationFaultException
     * @throws InvalidContentException
     * @throws SMEVFailureException
     * @throws SenderIsNotRegisteredException
     */
    @WebMethod(operationName = "GetStatus", action = "urn:GetStatus")
    @WebResult(name = "GetStatusResponse", targetNamespace = "urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.1", partName = "parameters")
    public GetStatusResponse getStatus(
        @WebParam(name = "GetStatusRequest", targetNamespace = "urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.1", partName = "parameters")
        GetStatusRequest parameters)
        throws InvalidContentException, SMEVFailureException, SenderIsNotRegisteredException, SignatureVerificationFaultException, UnknownMessageTypeException
    ;

    /**
     * Дай сообщение из моей входящей очереди _ответов_, если она не пуста.
     * 
     * @param parameters
     * @return
     *     returns com.integriks.smev.nwxRewrite.client.src.serverApi.autogenerated.types.GetResponseResponse
     * @throws UnknownMessageTypeException
     * @throws SignatureVerificationFaultException
     * @throws InvalidContentException
     * @throws SMEVFailureException
     * @throws SenderIsNotRegisteredException
     */
    @WebMethod(operationName = "GetResponse", action = "urn:GetResponse")
    @WebResult(name = "GetResponseResponse", targetNamespace = "urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.1", partName = "parameters")
    public GetResponseResponse getResponse(
        @WebParam(name = "GetResponseRequest", targetNamespace = "urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.1", partName = "parameters")
        GetResponseRequest parameters)
        throws InvalidContentException, SMEVFailureException, SenderIsNotRegisteredException, SignatureVerificationFaultException, UnknownMessageTypeException
    ;

    /**
     * 
     *                 Подтверждение получения сообщения из очереди.
     *                 Должен вызваться после получения сообщения методами GetRequest или GetResponse.
     *             
     * 
     * @param parameters
     * @return
     *     returns com.integriks.smev.nwxRewrite.client.src.serverApi.autogenerated.types.basic.Void
     * @throws SignatureVerificationFaultException
     * @throws InvalidContentException
     * @throws SMEVFailureException
     * @throws TargetMessageIsNotFoundException
     * @throws SenderIsNotRegisteredException
     */
    @WebMethod(operationName = "Ack", action = "urn:Ack")
    @WebResult(name = "AckResponse", targetNamespace = "urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.1", partName = "parameters")
    public Void ack(
        @WebParam(name = "AckRequest", targetNamespace = "urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.1", partName = "parameters")
        AckRequest parameters)
        throws InvalidContentException, SMEVFailureException, SenderIsNotRegisteredException, SignatureVerificationFaultException, TargetMessageIsNotFoundException
    ;

    /**
     * Получение статистики входящих очередей.
     * 
     * @param parameters
     * @return
     *     returns com.integriks.smev.nwxRewrite.client.src.serverApi.autogenerated.types.GetIncomingQueueStatisticsResponse
     * @throws SignatureVerificationFaultException
     * @throws InvalidContentException
     * @throws SMEVFailureException
     * @throws SenderIsNotRegisteredException
     */
    @WebMethod(operationName = "GetIncomingQueueStatistics", action = "urn:GetIncomingQueueStatistics")
    @WebResult(name = "GetIncomingQueueStatisticsResponse", targetNamespace = "urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.1", partName = "parameters")
    public GetIncomingQueueStatisticsResponse getIncomingQueueStatistics(
        @WebParam(name = "GetIncomingQueueStatisticsRequest", targetNamespace = "urn://x-artefacts-smev-gov-ru/services/message-exchange/types/1.1", partName = "parameters")
        GetIncomingQueueStatisticsRequest parameters)
        throws InvalidContentException, SMEVFailureException, SenderIsNotRegisteredException, SignatureVerificationFaultException
    ;

}
